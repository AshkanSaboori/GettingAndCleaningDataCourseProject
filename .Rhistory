allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
View(allData)
colNames = colnames(allData)
colNames
str_replace_all(colNames, '()', '')
str_replace_all(colNames, '()', '')
x = colNames[5]
x
str_replace(x, '()', '')
str_replace(x, '.().', '')
str_replace(x, '\\(\\)', '')
str_replace_all(colNames, '\\(\\)', '')
z = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, '-mean', 'Mean')
x = str_replace_all(x, '-std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time')
x = str_replace_all(x, '^f', 'Fourier')
})
z
z = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, '-mean', 'Mean')
x = str_replace_all(x, '-std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time')
x = str_replace_all(x, '^f', 'Fourier')
return(x)
})
z
colNames
z = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, '-mean', 'Mean')
x = str_replace_all(x, '-std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time')
x = str_replace_all(x, '^f', 'Fourier')
return(x)
})
z
z[1]
colNames[1]
z = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time')
x = str_replace_all(x, '^f', 'Fourier')
return(x)
})
z
names(z) = NULL
z
z = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(z) = NULL
z
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
colnames(allData) = colNames
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)Appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
View(allData)
View(activityLabels)
View(allData)
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)Appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '$activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
View(allData)
View(allData)
colnames(allData)
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)Appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'stdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
View(allData)
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)Appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
View(allData)
allData2 = allData %>%
group_by(activity, subject) %>%
summarise_all(mean)
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean)
View(allData2)
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean) %>%
arrange(ActivityID)
View(allData2)
library(stringr)
library(dplyr)
library(data.table)
#Read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)Merges the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)Extracts only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)Use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)Appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
#5)Create a second, independent tidy data set with
#the average of each variable for each activity and each subject.
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean) %>%
arrange(ActivityID)
library(stringr)
library(dplyr)
library(data.table)
#read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)merge the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)extract only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
#5)create a second, independent tidy data set with
#the average of each variable for each activity and each subject.
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean) %>%
arrange(ActivityID)
library(stringr)
library(dplyr)
library(data.table)
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
getwd()
setwd('/Users/ashkansaboori/Documents/OneDrive/MyPhD/Courses/0 Online Courses/01 Data Science - Johns Hopkins University/03 Getting and Cleaning Data/Week-4/Project/GettingAndCleaningDataCourseProject')
#load libraries
library(stringr)
library(dplyr)
library(data.table)
#read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)merge the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)extract only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Fourier-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
#5)create a second, independent tidy data set with
#the average of each variable for each activity and each subject.
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean) %>%
arrange(ActivityID)
write.table(allData2, file = 'finalData.txt', sep = '\t')
write.table(allData2, file = 'tidyData.txt', sep = '\t')
#load libraries
library(stringr)
library(dplyr)
library(data.table)
#read the data####
#general info
features = fread('./UCI HAR Dataset/features.txt', col.names = c('index', 'feature'))
activityLabels = fread('./UCI HAR Dataset/activity_labels.txt',
col.names = c('activity.code', 'activity'))
#training data
trainSet = fread('./UCI HAR Dataset/train/X_train.txt', header = FALSE,
col.names = features$feature)
trainLabel = fread('./UCI HAR Dataset/train/y_train.txt', col.names = 'activity.code')
trainSubject = fread('./UCI HAR Dataset/train/subject_train.txt', col.names = 'subject')
trainSet = cbind(trainSubject, trainLabel, trainSet)
#test data
testSet = fread('./UCI HAR Dataset/test/X_test.txt', header = FALSE,
col.names = features$feature)
testLabel = fread('./UCI HAR Dataset/test/y_test.txt', col.names = 'activity.code')
testSubject = fread('./UCI HAR Dataset/test/subject_test.txt', col.names = 'subject')
testSet = cbind(testSubject, testLabel, testSet)
#1)merge the training and the test sets to create one data set.
allData = as.data.frame(rbind(trainSet, testSet))
#2)extract only the measurements on the mean and standard deviation for each measurement.
allData = allData[, grepl('subject|activity|mean|std', colnames(allData))]
#3)use descriptive activity names to name the activities in the data set
allData = merge(activityLabels, allData, by = 'activity.code', all.y = TRUE)
#4)appropriately label the data set with descriptive variable names.
colNames = colnames(allData)
colNames = sapply(colNames, function(x){
x = str_replace_all(x, 'activity.code', 'ActivityID')
x = str_replace_all(x, '^activity$', 'Activity')
x = str_replace_all(x, 'subject', 'SubjectID')
x = str_replace_all(x, '\\(\\)', '')
x = str_replace_all(x, 'mean', 'Mean')
x = str_replace_all(x, 'std', 'StdDev')
x = str_replace_all(x, 'Acc', 'Acceleration')
x = str_replace_all(x, 'Mag', 'Magnitude')
x = str_replace_all(x, '^t', 'Time-')
x = str_replace_all(x, '^f', 'Freq-')
return(x)
})
names(colNames) = NULL
colnames(allData) = colNames
#5)create a second, independent tidy data set with
#the average of each variable for each activity and each subject.
allData2 = allData %>%
group_by(Activity, SubjectID) %>%
summarise_all(mean) %>%
arrange(ActivityID)
#save the dataset
write.table(allData2, file = 'tidyData.txt', sep = '\t')
View(allData2)
